{"version":3,"file":"static/js/299.819903a6.chunk.js","mappings":"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","sources":["webpack://react_app/./src/components/Users/Users.module.css?b9d0","webpack://react_app/./src/components/common/Preloader/Paginator/Paginator.module.css?d7b9","components/common/Preloader/Paginator/Paginator.jsx","components/Users/UsersFunc.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__LV877\",\"btn_follow\":\"Users_btn_follow__HOXw9\",\"users_content\":\"Users_users_content__8nYtx\",\"user_name\":\"Users_user_name__tOUE6\",\"user_data\":\"Users_user_data__JM29s\",\"user_location\":\"Users_user_location__TS6m2\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Paginator_pagination__DGwUI\",\"selected_number\":\"Paginator_selected_number__8Ntjo\",\"pagination_btn\":\"Paginator_pagination_btn__SB6xW\",\"pagination_btnLeft\":\"Paginator_pagination_btnLeft__l7DkM\",\"pagination_btnRight\":\"Paginator_pagination_btnRight__VX4eA\"};","import { useState } from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\nconst Paginator = (props) => {\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / 10);\r\n  let [currentPortion, setCurrentPortion] = useState(\r\n    Math.ceil(props.currentPage / 10)\r\n  ); // или useState(1) - будет сбрасываться на 1 стр при уходе\r\n  let currentLeftBorder = (currentPortion - 1) * 10 + 1; //10 - сколько стр будет выводиться за раз\r\n  let currentRightBorder = currentPortion * 10;\r\n\r\n  //чтобы выводились не все стр сразу\r\n  // let slicedPages;\r\n  // let curPage = props.currentPage;\r\n  // if (curPage - 3 < 0) {\r\n  //   slicedPages = pages.slice(0, 5);\r\n  // } else {\r\n  //   slicedPages = pages.slice(curPage - 3, curPage + 2);\r\n  // }\r\n\r\n  return (\r\n    <div className={s.pagination}>\r\n      {currentPortion > 1 ? (\r\n        <span>\r\n          {/* <button\r\n            onClick={() => {\r\n              props.onPageChanged(pages[0]);\r\n              setCurrentPortion(1);\r\n            }}>toFirst</button> */}\r\n          <button\r\n            className={`${s.pagination_btn} ${s.pagination_btnLeft}`}\r\n            onClick={() => {\r\n              currentPortion !== 1 && setCurrentPortion(currentPortion - 1);\r\n            }}\r\n          ></button>\r\n        </span>\r\n      ) : null}\r\n      {pages\r\n        .filter((p) => currentLeftBorder <= p && p <= currentRightBorder)\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={props.currentPage === p ? s.selected_number : \"\"}\r\n              onClick={(e) => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {currentPortion < portionCount ? (\r\n        <span>\r\n          <button\r\n            className={`${s.pagination_btn} ${s.pagination_btnRight}`}\r\n            onClick={() => {\r\n              currentPortion !== pagesCount &&\r\n                setCurrentPortion(currentPortion + 1);\r\n            }}\r\n          ></button>{\" \"}\r\n          {/* <button\r\n            onClick={() => {\r\n              props.onPageChanged(pages[pages.length - 1]);\r\n              setCurrentPortion(10);}}>toLast</button> */}\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Paginator;\r\n","import s from \"./Users.module.css\";\r\nimport userImg from \"../../assets/img/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Paginator from \"../common/Preloader/Paginator/Paginator\";\r\n\r\nlet UsersFunc = (props) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={props.currentPage}\r\n        totalUsersCount={props.totalUsersCount}\r\n        pageSize={props.pageSize}\r\n        onPageChanged={props.onPageChanged}\r\n      />\r\n      {/* <div className={s.pagination}>\r\n        {slicedPages.map((p) => {\r\n          return (\r\n            <span\r\n              className={props.currentPage === p ? s.selected_number : \"\"}\r\n              onClick={(e) => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      </div> */}\r\n\r\n      {props.users.map((u) => {\r\n        return (\r\n          <div key={u.id} className={s.users}>\r\n            <div>\r\n              <NavLink to={\"/profile/\" + u.id}>\r\n                <img\r\n                  src={u.photos.small != null ? u.photos.small : userImg}\r\n                  alt=\"user\"\r\n                />\r\n              </NavLink>\r\n              <div>\r\n                {u.followed ? (\r\n                  <button\r\n                    disabled={props.followingInProgress.some(\r\n                      (id) => id === u.id\r\n                    )}\r\n                    className={s.btn_follow}\r\n                    onClick={() => {\r\n                      props.unfollow(u.id);\r\n                      // props.toggleFollowingProgress(true, u.id);\r\n                      // usersAPI.userUnfollow(u.id).then((response) => {\r\n                      //   if (response.data.resultCode == 0) {\r\n                      //     props.unfollowSuccess(u.id);\r\n                      //   }\r\n                      //   props.toggleFollowingProgress(false, u.id);\r\n                      // });\r\n                    }}\r\n                  >\r\n                    Unfollow\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    disabled={props.followingInProgress.some(\r\n                      (id) => id === u.id\r\n                    )}\r\n                    className={s.btn_follow}\r\n                    onClick={() => {\r\n                      props.follow(u.id);\r\n                      // props.toggleFollowingProgress(true, u.id);\r\n                      // usersAPI.userFollow(u.id).then((response) => {\r\n                      //   if (response.data.resultCode == 0) {\r\n                      //     props.followSuccess(u.id);\r\n                      //   }\r\n                      //   props.toggleFollowingProgress(false, u.id);\r\n                      // });\r\n                    }}\r\n                  >\r\n                    Follow\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={s.users_content}>\r\n              <div className={s.user_data}>\r\n                <p className={s.user_name}>{u.name}</p>\r\n                <p>{u.status}</p>\r\n              </div>\r\n              <div className={s.user_data}>\r\n                <p className={s.user_location}>u.location.county</p>\r\n                <p className={s.user_location}>u.location.city</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default UsersFunc;\r\n","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import {\r\n  setCurrentPage,\r\n  getUsersThunkCreator,\r\n  follow,\r\n  unfollow,\r\n  setUsers,\r\n  toggleIsFetching,\r\n  pageChanged,\r\n} from \"../../redux/users-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\"; //работа с сервером(библиотека)\r\nimport React from \"react\"; //для классов\r\nimport UsersFunc from \"./UsersFunc\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    //{this.props.toggleIsFetching(true);}\r\n    // axios\r\n    //   .get(\r\n    //     `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\r\n    //     {\r\n    //       withCredentials: true,\r\n    //     }\r\n    //   )\r\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then((data) => {\r\n    //     this.props.toggleIsFetching(false);\r\n    //     this.props.setUsers(data.items);\r\n    //     this.props.setTotalUsersCount(data.totalCount);\r\n    //   });\r\n  }\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.pageChanged(pageNumber, this.props.pageSize); //это из users-reducer (thunk)\r\n\r\n    // this.props.setCurrentPage(pageNumber);\r\n    // this.props.toggleIsFetching(true);\r\n    // // axios\r\n    // //   .get(\r\n    // //     `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\r\n    // //     {\r\n    // //       withCredentials: true,\r\n    // //     }\r\n    // //   )\r\n    // usersAPI.getUsers(pageNumber, this.props.pageSize).then((data) => {\r\n    //   this.props.toggleIsFetching(false);\r\n    //   this.props.setUsers(data.items);\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <UsersFunc\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          followingInProgress={this.props.followingInProgress}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//вместо этого\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress: state.usersPage.followingInProgress,\r\n//   };\r\n// };\r\n\r\n//это\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userId) => {\r\n//       dispatch(followAC(userId));\r\n//     },\r\n//     unfollow: (userId) => {\r\n//       dispatch(unfollowAC(userId));\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersAC(users));\r\n//     },\r\n//     setCurrentPage: (pageNumber) => {\r\n//       dispatch(setCurrentPageAC(pageNumber));\r\n//     },\r\n//     setTotalUsersCount: (totalCount) => {\r\n//       dispatch(setUsersTotalCountAC(totalCount));\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//       dispatch(toggleIsFetchingAC(isFetching));\r\n//     },\r\n//   };\r\n// };\r\n\r\n//вместо этого:\r\n// let AuthNavigateComponent = withAuthNavigate(UsersAPI);\r\n// const UsersContainer = connect(mapStateToProps, {\r\n//   setCurrentPage,\r\n//   getUsers: getUsersThunkCreator,\r\n//   follow,\r\n//   unfollow,\r\n//   setUsers,\r\n//   toggleIsFetching,\r\n//   pageChanged,\r\n// })(AuthNavigateComponent);\r\n// export default UsersContainer;\r\n\r\n//это:\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    getUsers: getUsersThunkCreator,\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    pageChanged,\r\n  }),\r\n  withAuthNavigate\r\n)(UsersAPI);\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n  const NavigateComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to={\"/login/\"} />;\r\n    } else {\r\n      return <Component {...props} />;\r\n    }\r\n  };\r\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(\r\n    NavigateComponent\r\n  );\r\n\r\n  return ConnectedAuthNavigateComponent;\r\n};\r\n"],"names":["props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","currentPortion","setCurrentPortion","useState","currentPage","currentLeftBorder","currentRightBorder","_jsxs","className","s","children","_jsx","concat","onClick","filter","p","map","e","onPageChanged","Paginator","users","u","NavLink","to","id","src","photos","small","userImg","alt","followed","disabled","followingInProgress","some","unfollow","follow","name","status","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersAPI","React","constructor","arguments","pageNumber","this","pageChanged","componentDidMount","render","_Fragment","Preloader","UsersFunc","compose","connect","setCurrentPage","getUsersThunkCreator","setUsers","toggleIsFetching","withAuthNavigate","mapStateToPropsForNavigate","isAuth","auth","Component","Navigate"],"sourceRoot":""}